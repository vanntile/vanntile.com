---
import { getImage } from 'astro:assets'
import { getCollection } from 'astro:content'
import AnimatedHeader from '../components/AnimatedHeader.astro'
import Experience from '../components/Experience.astro'
import BaseLayout from '../layouts/BaseLayout.astro'
import { READABLE_FORMAT, blogCompareFn, getImageURL } from '../lib/utils'

const props = {
  title: `vanntile.com - software engineering's corner of the Internet`,
  publishedAt: new Date(),
  description:
    'vanntile - Software Engineer | Privacy Advocate | Open Source supporter | M.S. in Security & Cloud Computing',
  image: { src: '/assets/banner.jpg', alt: 'Banner image with logo and text "Privacy. FOSS. Cybersecurity."' },
  keywords: [
    'vanntile',
    'software engineer',
    'privacy advocate',
    'free open source software',
    'tech blog',
    'graphic design portfolio',
  ],
}

// Set dynamic image path
const { src, alt } = props.image
const remoteImgURL = await getImageURL(src)
const resultingImage = await getImage({ src: remoteImgURL, width: 1600, height: 800 })
// Update frontmatter
const frontmatter = { ...props, image: { src: resultingImage.src, alt } }

const latestPosts = (await getCollection('blog')).sort(blogCompareFn).slice(0, 3)
---

<script>
  const options = {
    root: null,
    rootMargin: '0px',
    threshold: 0.4,
  }

  const setObserver = (target: Element | null, element: Element | null) => {
    if (!target || !element) return

    const callback: IntersectionObserverCallback = (entries, observer) => {
      if (entries[0].intersectionRatio > 0.4) element.classList.add('active')
      else element.classList.remove('active')
    }

    const observer = new IntersectionObserver(callback, options)
    observer.observe(target)
  }

  window.addEventListener('DOMContentLoaded', (_event) => {
    setObserver(document.querySelector('#section-tech'), document.querySelector('#logoSvg'))
    setObserver(document.querySelector('#section-experience'), document.querySelector('#logotypeSvg'))
  })
</script>

<BaseLayout frontmatter={frontmatter} withNav={false}>
  <main class="home">
    <section class="section-fold">
      <div>
        <header>
          <AnimatedHeader />
          <div class="subheading">software engineer && privacy advocate</div>
        </header>
        <a class="visually-hidden" href="#section-tech">Skip to main content</a>
        <p>
          I'm vanntile, a <span class="highlight">software engineer</span> creating safer digital experiences. My technical
          expertise allows me to craft reliable modern systems and learn the inner workings of legacy ones.
        </p>
        <p>
          The core of my passion resides in <span class="highlight">privacy</span>, <span class="highlight"
            >security</span
          > and <span class="highlight">open-source software</span>. I’m actively interested in performance,
          maintainability and user-centered functionality. I like to use modern tools, reliable frameworks and classic,
          battle-tested principles.
        </p>
        <p>
          Internally, I’m focused on acquiring knowledge and practicing skills as I carefully improve the technical
          quality of my work. Externally, I focus on the intersection between <span class="highlight"
            >product feasibility</span
          > and <span class="highlight">customer experience</span>. <br class="hidden inline-block-md" /> I understand the
          designers’ aim as well as the developers’ constraints, so you know I enjoy collaborating with proactive and curious
          teams on challenging projects.
        </p>
        <p>
          We can do outstanding work together as long as you don’t mistake my skill section for Pokemon badges. My
          preferred work is <span class="highlight">full-stack development</span> and <span class="highlight"
            >DevSecOps</span
          >.
        </p>
        <div class="links">
          <a class="cta" href="#section-tech">techstack</a>
          <a class="cta" href="#section-experience">experience</a>
          <a class="cta" href="#section-blog">blog</a>
          <a class="cta" href="/contact">contact</a>
        </div>
      </div>
    </section>
    <section id="section-tech" class="section-tech divider-before divider-after divider-accent">
      <div class="logo">
        <svg
          id="logoSvg"
          aria-hidden="true"
          focusable="false"
          class="active"
          width="210"
          height="210"
          viewBox="0 0 500 500"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M336.02 141.274L407.454 141.274L316.718 276.505C327.367 282.143 334.915 293.153 334.915 306.746V343.057C334.915 358.963 347.808 371.856 363.713 371.858L377.891 371.855L377.891 268.804C377.891 255.263 368.546 243.905 355.954 240.826L367.833 223.122C385.802 230.502 398.455 248.175 398.455 268.804L398.455 392.415L363.715 392.422C336.452 392.422 314.35 370.321 314.35 343.057V306.746C314.35 300.663 310.551 295.686 305.119 293.792L238.918 392.455L70.3828 141.274H171.759L255.855 266.608C258.389 270.138 262.498 272.404 267.135 272.404L279.402 272.404L265.625 292.935C254.613 292.46 244.945 286.805 238.998 278.388L238.926 278.287L160.793 161.839H108.945L238.918 355.546L318.589 236.808C299.968 229.743 286.733 211.737 286.733 190.639C286.733 163.402 308.792 141.317 336.02 141.274ZM307.298 190.639C307.298 204.663 317.322 216.347 330.595 218.914L368.892 161.839H336.045C320.163 161.867 307.298 174.751 307.298 190.639Z"
            class="logoSvg"></path>
        </svg>
      </div>
      <h2>./about/tech</h2>
      <p>
        I am an in-progress computer engineer with a deep passion for the worlds of frontend, design and deployment.
        Keep scrolling if you wanna know why, how and what I work on!
      </p>
      <h3>What is my tech stack?</h3>
      <span>Languages</span>
      <div class="tags">
        {
          ['JavaScript (ES2021)', 'TypeScript', 'Go 🇬', 'Python 3 🐍', 'C/C++', 'Haskell λ'].map((s: string) => (
            <span class="tag-home">{s}</span>
          ))
        }
      </div>
      <span>Markup</span>
      <div class="tags">
        {['JSON', 'YAML', 'HTML', 'Markdown', 'MDX'].map((s: string) => <span class="tag-home">{s}</span>)}
      </div>
      <span>Frameworks</span>
      <div class="tags">
        {
          [
            'Astro 🚀',
            'NextJS 🇳',
            'React ⚛️',
            'Vue 🇻',
            'Angular 🛡️',
            'Tailwind CSS 🍃',
            'FastAPI ⚡',
            'Express',
            'Django',
            'Flask',
            'GTK/gtkmm',
            'unified',
          ].map((s: string) => <span class="tag-home">{s}</span>)
        }
      </div>
      <span>Testing</span>
      <div class="tags">
        {['Robot 🤖', 'Cypress', 'Jest 🃏', 'JUnit'].map((s: string) => <span class="tag-home">{s}</span>)}
      </div>
      <span>Tools</span>
      <div class="tags">
        {
          ['Deno 🦕', 'NodeJS 🟩', 'npm 📦', 'Docker 🐳', 'Jenkins 🎩'].map((s: string) => (
            <span class="tag-home">{s}</span>
          ))
        }
      </div>
      <span>Platforms</span>
      <div class="tags">
        {
          ['GitHub 🐙', 'GitLab 🦊', 'Bitbucket 🪣', 'Heroku', 'Linode', 'Mastodon 🐘'].map((s: string) => (
            <span class="tag-home">{s}</span>
          ))
        }
      </div>
      <span>Standards &amp; paradigms</span>
      <div class="tags">
        {
          ['FOSS', 'OpenAPI', 'REST', 'GraphQL', 'semantic web', 'functional programming'].map((s: string) => (
            <span class="tag-home">{s}</span>
          ))
        }
      </div>
      <span>Design tools &amp; knowledge</span>
      <div class="tags">
        {
          ['Inkscape', 'Figma', 'GIMP', 'SVG', 'Typography', 'Layout', 'Visual idenitities'].map((s: string) => (
            <span class="tag-home">{s}</span>
          ))
        }
      </div>
      <span>Other snappy stuff</span>
      <div class="tags">
        {
          ['git', 'Linux', 'GNOME', 'Obsidian', 'VSCodium', 'vim', 'Jupyter', 'Prettier'].map((s: string) => (
            <span class="tag-home">{s}</span>
          ))
        }
      </div>
    </section>
    <section id="section-experience" class="section-experience divider-before divider-after">
      <div class="logo">
        <svg
          id="logotypeSvg"
          aria-hidden="true"
          focusable="false"
          class="active"
          width="520"
          height="60"
          viewBox="480 0 553.84615 168"
          preserveAspectRatio="xMidYMid meet"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="m 494.10057,137.19 28.87101,-82.58 h -25.96801 l -20.161,64.193 -20.323,-64.193 h -25.806 l 28.871,82.58 z m 80.324,-18.064 c -12.581,0 -21.613,-9.839 -21.613,-23.226 0,-13.387 9.032,-23.226 21.613,-23.226 12.58101,0 21.61301,9.839 21.61301,23.226 0,13.387 -9.032,23.226 -21.61301,23.226 z m 21.774,-53.065 c -6.451,-9.193 -16.29,-14.677 -28.06399,-14.677 -23.22601,0 -39.51701,18.387 -39.51701,44.516 0,26.129 16.291,44.516 39.51701,44.516 11.77399,0 21.61299,-5.484 28.06399,-14.677 v 11.451 h 24.19401 V 54.61 h -24.19401 v 11.45 z m 45.126,-11.451 v 82.58 h 24.194 V 90.739 c 0,-10.484 7.742,-18.065 17.258,-18.065 9.516,0 15.322,7.097 15.322,17.097 v 47.419 h 24.194 V 85.578 c 0,-19.84 -12.581,-34.194 -31.129,-34.194 -10.807,0 -20.484,5.484 -26.291,14.355 v -11.13 h -23.548 z m 100.33401,0 v 82.58 h 24.19399 V 90.739 c 0,-10.484 7.742,-18.065 17.25801,-18.065 9.51599,0 15.322,7.097 15.322,17.097 v 47.419 h 24.19399 V 85.578 c 0,-19.84 -12.581,-34.194 -31.129,-34.194 -10.807,0 -20.484,5.484 -26.291,14.355 v -11.13 h -23.548 z m 163.24299,0 v 82.58 h 24.193 V 54.61 Z m 12.096,-10.968 c 8.226,0 14.033,-5.645 14.033,-13.71 0,-7.903 -5.807,-13.548 -14.033,-13.548 -8.225,0 -14.032,5.645 -14.032,13.548 0,8.065 5.807,13.71 14.032,13.71 z m 34.793,-26.129 V 137.19 h 24.193 V 17.513 Z m 66.18003,70.645 c 2.097,-10.968 9.516,-18.226 20.162,-18.226 10.967,0 19.032,7.742 20.483,18.226 z m -24.83803,7.097 c 0,26.613 18.70903,45.161 45.32203,45.161 20.161,0 37.581,-11.774 41.613,-27.903 l -21.774,-3.064 c -2.581,7.258 -10.161,12.419 -19.194,12.419 -10.967,0 -18.871,-7.581 -20.967,-19.194 l 64.677,0.162 c 0.323,-1.775 0.323,-5.162 0.323,-7.258 0,-26.13 -18.065,-44.194 -44.517,-44.194 -26.612,0 -45.48303,18.064 -45.48303,43.87 z m -151.133,15.161 c 0,17.581 10.645,30 27.097,30 5.161,0 11.612,-0.968 16.612,-2.58 v -19.517 c -2.742,0.807 -6.29,1.291 -8.548,1.291 -6.774,0 -10.968,-4.678 -10.968,-11.613 v -35 h 18.71 V 54.61 h -18.71 V 33.803 l -24.193,-0.002 z"
            fill="currentColor"
            class="logoSvg logotypeSvg"></path>
        </svg>
      </div>
      <h2>./about/experience</h2>
      <Experience />
    </section>
    <section id="section-blog" class="section-blog">
      <h2>./blog/coding/latest</h2>
      <div>
        {
          latestPosts.map((post) => (
            <div class="post">
              <p>
                <time datetime={post.data.publishedAt.toISOString().slice(0, 10)}>
                  {READABLE_FORMAT.format(post.data.publishedAt)}
                </time>
              </p>
              <a href={`/blog/${post.id}`}>{post.data.title}</a>
              <p>{post.data.description}</p>
            </div>
          ))
        }
      </div>
      <div class="additional">
        <span>...or</span>
        <a class="cta" href="/blog">Check all blog posts</a>
      </div>
    </section>
  </main>
</BaseLayout>
